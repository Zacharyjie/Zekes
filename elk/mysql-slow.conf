input {
  file {
    type => "mysql-slow"
    path => "/data/mysqldata/3306/slow_query.log"
    start_position => beginning
    sincedb_path => '/var/log/logstash/sincedb*'
    codec => multiline {
    pattern => "^# User@Host:"
    negate => true
    what => "previous"
    }
  }
}

filter {

if [message] =~ "^Tcp" {
        drop {}
}

if [message] =~ "^Time" {
        drop {}
}

if [message] =~ "^\/usr" {
        drop {}
}
  grok {
    match => { "message" => "SELECT SLEEP" }
    add_tag => [ "sleep_drop" ]
    tag_on_failure => []
  }


  if "sleep_drop" in [tags] {
    drop {}
  }

grok {
    match => [ "message", "(?m)^# User@Host: (?<user>\w+)\[[^\]]+\] @\s+(?<dnshost>\w+)?\s+\[(?<clientip>.*?)\]\s+Id:\s+(?<id>\d+)\s+# Query_time: %{BASE10NUM:query_time:\float}\s+Lock_time: %{BASE10NUM:Lock_Time:\float}\s+Rows_sent: %{BASE10NUM:Rows_Sent:\float}\s+Rows_examined: %{BASE10NUM:Rows_Examined:\int}\s+(use )?(?<use_db>\w+;)?(\s+)?SET timestamp=%{BASE10NUM:timestamp:\int};\s+(?<sql>(?<action>\w+)\s+.*);(?<time>.*)?$" ]
}
    mutate {
        lowercase => ['action','use_db']
    }

  date {
    match => [ "timestamp", "UNIX" ]
    remove_field => [ "timestamp" ,"message" ]
  }

}
